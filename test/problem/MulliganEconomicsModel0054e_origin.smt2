(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Casey Mulligan, Russell Bradford, James H. Davenport, Matthew England, and ZakTonks
Generated on: 2018-04-19
Generator: TheoryGuru
Application: NGM: Temporary government purchases, example set
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)

; Code written by TheoryGuru
; Mulligan model #0054
;   is part of the example library included in "Quantifier Elimination for Reasoning in Economics" April 2018
;   by Mulligan, Bradford, Davenport, England, and Tonks
;   available at bathpaper.economicreasoning.com .
; Economics background for this and other examples is provided at examples.economicreasoning.com .

(declare-fun v1 () Real)
(declare-fun v2 () Real)
(declare-fun v3 () Real)
(declare-fun v4 () Real)
(declare-fun v5 () Real)
(declare-fun v6 () Real)
(declare-fun v7 () Real)
(declare-fun v8 () Real)
(declare-fun v9 () Real)
(declare-fun v10 () Real)
(declare-fun v11 () Real)
(declare-fun v12 () Real)
(declare-fun v13 () Real)
(declare-fun v14 () Real)
(declare-fun v15 () Real)
(declare-fun v16 () Real)
(declare-fun v17 () Real)
(declare-fun v18 () Real)
(declare-fun v19 () Real)

; input assumptions
(define-fun assumptions () Bool (and 
(> (* v15 v19) (* v17 v18))
(> (* v15 v18) (* v16 v17))
(> (* v10 v2) 0)
(> (* v10 (* v2 v2)) (* v1 v11 v2))
(< (* (* v1 v1) v13 v2) 0)
(> v11 0)
(< (* v13 v2) 0)
(> v1 0)
(> v2 0)
(< v4 1)
(>= v4 0)
(> v12 0)
(< v14 0)
(> v3 (- 1))
(> v17 0)
(< v15 0)
(< v19 0)
(< v16 0)
(> (* v16 v19) (* v18 v18))
(= (+ (* v15 v19 (* v2 v2 v2) v5) (* v15 v18 (* v2 v2 v2) v8)) (+ (* v17 v18 (* v2 v2 v2) v5) (* (- 1) v1 v13 (* v17 v17) v2 v6) (* (* v1 v1) v13 (* v17 v17) v8) (* v16 v17 (* v2 v2 v2) v8)))
(= (+ v2 (* v2 v5) (* (- 1) v2 v6) (* (- 1) v11 v2 v6) (* v2 v7) (* v1 v11 v8) (* (- 1) v10 v2 v8)) 0)
(= (+ (* v19 v5) (* 2 v19 v3 v5) (* v19 (* v3 v3) v5) (* v18 v8) (* 2 v18 v3 v8) (* v18 (* v3 v3) v8) (* v12 v9)) (+ (* v14 v7) (* v14 v3 v7)))
(= v9 0)
(= v6 0)
))

; input hypothesis
(define-fun hypothesis () Bool (and 
(> v8 0)
(> v5 (- 1))
(> (+ (* v11 (* v2 v2) v6) (* (- 1) v1 v11 v2 v8) (* v10 (* v2 v2) v8)) 0)
(< v5 0)
(< v7 0)
(< (+ (* v11 (* v2 v2) v6) (* (- 1) v1 v11 v2 v8) (* v10 (* v2 v2) v8)) (* v2 v2))
))

(assert assumptions)
(assert hypothesis)
(check-sat) ; checking the existence of an example to assumptions => hypothesis
(get-model)
(exit)