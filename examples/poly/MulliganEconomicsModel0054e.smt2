(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Casey Mulligan, Russell Bradford, James H. Davenport, Matthew England, and ZakTonks
Generated on: 2018-04-19
Generator: TheoryGuru
Application: NGM: Temporary government purchases, example set
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)

; Code written by TheoryGuru
; Mulligan model #0054
;   is part of the example library included in "Quantifier Elimination for Reasoning in Economics" April 2018
;   by Mulligan, Bradford, Davenport, England, and Tonks
;   available at bathpaper.economicreasoning.com .
; Economics background for this and other examples is provided at examples.economicreasoning.com .

(declare-fun v1 () Real)
(declare-fun v2 () Real)
(declare-fun v3 () Real)
(declare-fun v4 () Real)
(declare-fun v5 () Real)
(declare-fun v6 () Real)
(declare-fun v7 () Real)

(declare-fun v8 () Real)
(declare-fun v10 () Real)

; input assumptions
(define-fun assumptions () Bool (and 
(> (* v10 (- 1)) (* 1 0))
(> (* v10 0) (* (- 1) 1))
(> (* v8 v2) 0)
(> (* v8 (* v2 v2)) (* v1 1 v2))
(< (* (* v1 v1) (- 1) v2) 0)
(> 1 0)
(< (* (- 1) v2) 0)
(> v1 0)
(> v2 0)
(< v4 1)
(>= v4 0)
(> 1 0)
(< (- 1) 0)
(> v3 (- 1))
(> 1 0)
(< v10 0)
(< (- 1) 0)
(< (- 1) 0)
(> (* (- 1) (- 1)) (* 0 0))
(= (+ (* v10 (- 1) (* v2 v2 v2) v5) (* v10 0 (* v2 v2 v2) 1)) (+ (* 1 0 (* v2 v2 v2) v5) (* (- 1) v1 (- 1) (* 1 1) v2 v6) (* (* v1 v1) (- 1) (* 1 1) 1) (* (- 1) 1 (* v2 v2 v2) 1)))
(= (+ v2 (* v2 v5) (* (- 1) v2 v6) (* (- 1) 1 v2 v6) (* v2 v7) (* v1 1 1) (* (- 1) v8 v2 1)) 0)
(= (+ (* (- 1) v5) (* 2 (- 1) v3 v5) (* (- 1) (* v3 v3) v5) (* 0 1) (* 2 0 v3 1) (* 0 (* v3 v3) 1) (* 1 0)) (+ (* (- 1) v7) (* (- 1) v3 v7)))
(= 0 0)
(= v6 0)
))

; input hypothesis
(define-fun hypothesis () Bool (and 
(> 1 0)
(> v5 (- 1))
(> (+ (* 1 (* v2 v2) v6) (* (- 1) v1 1 v2 1) (* v8 (* v2 v2) 1)) 0)
(< v5 0)
(< v7 0)
(< (+ (* 1 (* v2 v2) v6) (* (- 1) v1 1 v2 1) (* v8 (* v2 v2) 1)) (* v2 v2))
))

(assert assumptions)
(assert hypothesis)
(check-sat) ; checking the existence of an example to assumptions => hypothesis
(get-model)

(exit)