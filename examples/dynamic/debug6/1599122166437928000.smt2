(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Anastasiia Izycheva, Eva Darulova
Generated on: 2020-09-11
Generator: Pine (using Z3 Python API)
Application: Check inductiveness of a loop invariant
Target solver: Z3

These benchmarks were generated while developing the tool Pine [1], which uses
CVC4/Z3 to check inductiveness of invariants. The work is described in [2].

[1] https://github.com/izycheva/pine
[2] A.Izycheva, E.Darulova, H.Seidl, SAS'20, "Counterexample- and Simulation-Guided Floating-Point Loop Invariant Synthesis"

 Loop:
   u' := u + 0.01 * v
   v' := v + 0.01 * (-0.5 * v - 9.81 * u)

 Input ranges:
   u in [0.0,0.0]
   v in [2.0,3.0]

 Invariant:
   -1.0*u + 0.26*v + 0.84*u^2 + -0.12*u*v + 0.06*v^2 <= 1.42
 and
   u in [-0.7,2.1]
   v in [-6.9,3.0]

 Query: Loop and Invariant and not Invariant'
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun u! () Real)
(declare-fun v! () Real)
(declare-fun u () Real)
(declare-fun v () Real)
(assert
 (let ((?x53 (+ (* (* (- (/ 3.0 25.0)) u!) v!) (+ (* (* (/ 3.0 50.0) v!) v!) (* (- 1.0) u!)))))
 (let ((?x213 (* (/ 13.0 50.0) v!)))
 (let (($x108 (and (<= (- (/ 7.0 10.0)) u!) (>= (/ 21.0 10.0) u!) (<= (- (/ 69.0 10.0)) v!) (>= 3.0 v!))))
 (let (($x184 (and $x108 (>= (/ 71.0 50.0) (+ ?x213 (+ (* (* (/ 21.0 25.0) u!) u!) ?x53))) )))
 (let (($x291 (and (= u! (+ u (* (/ 1.0 100.0) v))) (= v! (+ v (* (/ 1.0 100.0) (- (* (- (/ 1.0 2.0)) v) (* (/ 981.0 100.0) u))))))))
 (let ((?x47 (+ (* (* (- (/ 3.0 25.0)) u) v) (+ (* (* (/ 3.0 50.0) v) v) (* (- 1.0) u)))))
 (let (($x244 (>= 3.0 v)))
 (let (($x173 (and (and (<= (- (/ 7.0 10.0)) u) (>= (/ 21.0 10.0) u) (<= (- (/ 69.0 10.0)) v) $x244) (>= (/ 71.0 50.0) (+ (* (/ 13.0 50.0) v) (+ (* (* (/ 21.0 25.0) u) u) ?x47))) )))
 (and $x173 $x291 (not $x184)))))))))))
(check-sat)
(exit)
