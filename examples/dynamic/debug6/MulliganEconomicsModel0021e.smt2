(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Casey Mulligan, Russell Bradford, James H. Davenport, Matthew England, and ZakTonks
Generated on: 2018-04-19
Generator: TheoryGuru
Application: NGM (Neoclassical Growth Model): Labor taxes reduce steady-state labor, capital, consumption, example set
Target solver: Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)

; Code written by TheoryGuru
; Mulligan model #0021
;   is part of the example library included in "Quantifier Elimination for Reasoning in Economics" April 2018
;   by Mulligan, Bradford, Davenport, England, and Tonks
;   available at bathpaper.economicreasoning.com .
; Economics background for this and other examples is provided at examples.economicreasoning.com .

(declare-fun v1 () Real)
(declare-fun v2 () Real)
(declare-fun v3 () Real)
(declare-fun v4 () Real)
(declare-fun v5 () Real)
(declare-fun v6 () Real)
(declare-fun v7 () Real)
(declare-fun v8 () Real)
(declare-fun v9 () Real)
(declare-fun v10 () Real)
(declare-fun v11 () Real)
(declare-fun v12 () Real)
(declare-fun v13 () Real)
(declare-fun v14 () Real)
(declare-fun v15 () Real)
(declare-fun v16 () Real)
(declare-fun v17 () Real)
(declare-fun v18 () Real)
(declare-fun v19 () Real)
(declare-fun v20 () Real)

; input assumptions
(define-fun assumptions () Bool (and 
(= (+ (* v10 v19) (* v20 v9)) 0)
(= (+ (* (- 1) v10 v12 v13) (* v10 v11 v14) (* (* v13 v13) v16) (* (- 1) v10 (* v13 v13) v17) (* v10 (* v13 v13) v17 v7) (* v11 v15 v8) (* (- 1) (* v13 v13) v19 v9) (* (* v13 v13) v19 v7 v9)) (* v13 v14 v8))
(= (+ v8 (* v4 v9)) (+ (* v10 v16) (* v18 v9)))
(= (+ v4 v5 (* v18 v6)) v18)
(= (+ v3 v4) v18)
(>= v3 0)
(> v13 0)
(< v11 0)
(< v15 0)
(< v12 0)
(> v18 0)
(> v16 0)
(>= v19 0)
(< v20 0)
(< v17 0)
(>= v4 0)
(> v5 0)
(> v1 0)
(> v2 0)
(< v6 1)
(< v7 1)
(> (* v11 v14) (* v12 v13))
(> (* v11 v15) (* v13 v14))
(< v12 (+ (* (- 1) v14 v16) (* (- 1) v13 v17) (* v14 v16 v7) (* v13 v17 v7)))
(= (+ (* v1 v19) (* v17 v2)) 0)
(= (+ (* v19 v2) (* v1 v20)) 0)
(= v7 0)
(= v6 0)
))

; input hypothesis
(define-fun hypothesis () Bool
(and (< v10 0) (< v8 0) (< v9 0))
)

(assert assumptions)
(assert hypothesis)
(check-sat) ; checking the existence of an example to assumptions => hypothesis


(exit)